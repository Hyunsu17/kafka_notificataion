services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
  kafka:
    image: 'bitnami/kafka:3.4.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS= PLAINTEXT://:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_MODE=BASIC
    depends_on:
      - zookeeper
#    volumes:
#      - ./kafka-data:/bitnami/kafka  # (선택) 데이터를 호스트에 남기려면
    # Depends_on 없이 단독으로 기동해도 되지만, 명시해도 무방합니다.
    # depends_on:
    #   - zookeeper

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=notify_db
    ports:
      - "3306:3306"
#    volumes:
#      - ./mysql-data:/var/lib/mysql  # (선택) 데이터 유지용

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
#    volumes:
#      - ./redis-data:/data  # (선택) 데이터 유지용
